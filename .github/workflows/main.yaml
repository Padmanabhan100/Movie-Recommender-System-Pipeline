name: Build and Deploy to Cloud Run
on:
  push:
    branches: [ "master"]

env:
  PROJECT_ID: zippy-bee-332908 # TODO: update Google Cloud project id
  GAR_LOCATION: movieflix # TODO: update Artifact Registry location
  SERVICE: my-cloud-run-service # TODO: update Cloud Run service name
  REGION: asia-south1 # TODO: update Cloud Run service region.
  IMAGE_NAME: movieflix_image
  MOVIE_SIMILARITY_ID_MAPPING_FILE: https://storage.cloud.google.com/movieflixbucket/movie_similarity_id_mapping.csv?authuser=0
  SIMILARITY_FILE: https://storage.cloud.google.com/movieflixbucket/similarity.npy?authuser=0

jobs:
  Continuous-Integration:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: install the gcloud cli
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_CREDENTIALS }}
          export_default_credentials: true

      - name: Install manual artifacts from Google Cloud Storage
        run: |-
          pwd
          dir
          # Authenticate with Google Cloud using a service account key
          #echo ${{ secrets.GCP_CREDENTIALS }} > key.json
          #gcloud auth activate-service-account --key-file=key.json
          
          # Specify the bucket name and paths to the files you want to download
          BUCKET_NAME="movieflixbucket"
          SOURCE_PATHS=(${{ env.MOVIE_SIMILARITY_ID_MAPPING_FILE }} ${{ env.SIMILARITY_FILE }})

          # Destination directory
          DESTINATION_DIR="./movieflix/manual_artifacts"

          # Loop through the source paths and download each file
          for SOURCE_PATH in "${SOURCE_PATHS[@]}"; do
            # Download the file to the destination directory
            gsutil cp "gs://${BUCKET_NAME}/${SOURCE_PATH}" "${DESTINATION_DIR}"
          done

      - name: Build and Push Docker imgae
        run: |-

          echo "Authenticating Docker"
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev
          echo "Authenticated Docker done!"

          echo "Building Image"
          docker build -t ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_LOCATION }}/${{ env.IMAGE_NAME }}:${{ github.sha }} .
          echo "Image Built Successfully!"

          docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_LOCATION }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

  Continuous-Deployment:
    needs: Continuous-Integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          # NOTE: If using a pre-built image, update the image name here
          image: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_LOCATION }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      # If required, use the Cloud Run url  output in later steps
      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}